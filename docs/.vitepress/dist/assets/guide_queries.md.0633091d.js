import{_ as s,o as a,c as n,S as e}from"./chunks/framework.f15d8f8c.js";const d=JSON.parse('{"title":"QUERIES","description":"","frontmatter":{},"headers":[],"relativePath":"guide/queries.md","filePath":"guide/queries.md"}'),l={name:"guide/queries.md"},o=e(`<h1 id="queries" tabindex="-1">QUERIES <a class="header-anchor" href="#queries" aria-label="Permalink to &quot;QUERIES&quot;">â€‹</a></h1><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">ExtendObjectType</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">Query</span><span style="color:#A6ACCD;">&gt;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Queries</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">CallResult</span><span style="color:#89DDFF;">&lt;bool&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">templateIsValid</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">template</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// todo: use fluid to try parsing</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> CallResult</span><span style="color:#89DDFF;">&lt;bool&gt;.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Not implemented</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>The code defines a class named <code>Queries</code> with a method <code>TemplateIsValid</code>, which is intended to be a <code>GraphQL</code> query.</p>`,3),p=[o];function t(c,r,i,y,F,D){return a(),n("div",null,p)}const A=s(l,[["render",t]]);export{d as __pageData,A as default};
